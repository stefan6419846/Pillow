name: Test Windows

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10-dev"]
        architecture: ["x86", "x64"]
        include:
          # PyPy3.6 only ships 32-bit binaries for Windows
          - python-version: "pypy-3.6"
            architecture: "x86"
          # PyPy 7.3.4+ only ships 64-bit binaries for Windows
          - python-version: "pypy-3.7"
            architecture: "x64"
    timeout-minutes: 30

    name: Python ${{ matrix.python-version }} ${{ matrix.architecture }}

    steps:
    - name: Checkout Pillow
      uses: actions/checkout@v2

    - name: Checkout cached dependencies
      uses: actions/checkout@v2
      with:
        repository: python-pillow/pillow-depends
        path: winbuild\depends

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~\AppData\Local\pip\Cache
        key:
          ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}-${{ hashFiles('**/.github/workflows/test-windows.yml') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.python-version }}-${{ matrix.architecture }}-
          ${{ runner.os }}-${{ matrix.python-version }}-

    # sets env: pythonLocation
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}

    - name: Print build system information
      run: python .github/workflows/system-info.py

    - name: python -m pip install pytest pytest-cov pytest-timeout Pillow==8.3.0
      run: python -m pip install pytest pytest-cov pytest-timeout Pillow==8.3.0

    - name: Install dependencies
      id: install
      run: |
        xcopy /S /Y winbuild\depends\test_images\* Tests\images\
      shell: pwsh

    - name: Test Pillow
      run: |
        path %GITHUB_WORKSPACE%\\winbuild\\build\\bin;%PATH%
        python.exe -m pytest -vx -W always --cov PIL --cov Tests --cov-report term --cov-report xml Tests
      shell: cmd

    - name: Prepare to upload errors
      if: failure()
      run: |
        mkdir -p Tests/errors
      shell: bash

    - name: Upload errors
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: errors
        path: Tests/errors

    - name: After success
      run: |
        .ci/after_success.sh
      shell: pwsh

  msys:
    runs-on: windows-2019

    strategy:
      fail-fast: false
      matrix:
        mingw: ["MINGW32", "MINGW64"]
        include:
          - mingw: "MINGW32"
            name: "MSYS2 MinGW 32-bit"
            package: "mingw-w64-i686"
          - mingw: "MINGW64"
            name: "MSYS2 MinGW 64-bit"
            package: "mingw-w64-x86_64"

    defaults:
      run:
        shell: bash.exe --login -eo pipefail "{0}"
    env:
      MSYSTEM: ${{ matrix.mingw }}
      CHERE_INVOKING: 1

    timeout-minutes: 30
    name: ${{ matrix.name }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up shell
        run: echo "C:\msys64\usr\bin\" >> $env:GITHUB_PATH
        shell: pwsh

      - name: Install Dependencies
        run: |
          pacman -S --noconfirm \
              ${{ matrix.package }}-python3-cffi \
              ${{ matrix.package }}-python3-numpy \
              ${{ matrix.package }}-python3-olefile \
              ${{ matrix.package }}-python3-pip \
              ${{ matrix.package }}-python3-pyqt5 \
              ${{ matrix.package }}-python3-setuptools \
              ${{ matrix.package }}-freetype \
              ${{ matrix.package }}-ghostscript \
              ${{ matrix.package }}-lcms2 \
              ${{ matrix.package }}-libimagequant \
              ${{ matrix.package }}-libjpeg-turbo \
              ${{ matrix.package }}-libraqm \
              ${{ matrix.package }}-libtiff \
              ${{ matrix.package }}-libwebp \
              ${{ matrix.package }}-openjpeg2 \
              subversion

          python3 -m pip install pyroma pytest pytest-cov

          pushd depends && ./install_extra_test_images.sh && popd

      - name: Build Pillow
        run: CFLAGS="-coverage" python3 setup.py build_ext install

      - name: Test Pillow
        run: |
          python3 selftest.py --installed
          python3 -c "from PIL import Image"
          python3 -m pytest -vx --cov PIL --cov Tests --cov-report term --cov-report xml Tests

      - name: Upload coverage
        run: |
          python3 -m pip install codecov
          bash <(curl -s https://codecov.io/bash) -F GHA_Windows
        env:
          CODECOV_NAME: ${{ matrix.name }}

  success:
    needs: [build, msys]
    runs-on: ubuntu-latest
    name: Windows Test Successful
    steps:
      - name: Success
        run: echo Windows Test Successful
