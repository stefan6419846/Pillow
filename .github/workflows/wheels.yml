name: Wheels

on:
  push:
    paths:
      - ".ci/requirements-cibw.txt"
      - ".github/workflows/wheel*"
      - "setup.py"
      - "wheels/*"
      - "winbuild/build_prepare.py"
      - "winbuild/fribidi.cmake"
    tags:
      - "*"
  pull_request:
    paths:
      - ".ci/requirements-cibw.txt"
      - ".github/workflows/wheel*"
      - "setup.py"
      - "wheels/*"
      - "winbuild/build_prepare.py"
      - "winbuild/fribidi.cmake"
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 1

jobs:
  build-2-native-wheels:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "manylinux2014 and musllinux x86_64"
            os: ubuntu-latest
            cibw_arch: x86_64
          - name: "manylinux_2_28 x86_64"
            os: ubuntu-latest
            cibw_arch: x86_64
            build: "*manylinux*"
            manylinux: "manylinux_2_28"
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install cibuildwheel
        run: |
          python3 -m pip install -r .ci/requirements-cibw.txt

      - name: Build wheels
        run: |
          python3 -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS: ${{ matrix.cibw_arch }}
          CIBW_BUILD: ${{ matrix.build }}
          CIBW_MANYLINUX_PYPY_X86_64_IMAGE: ${{ matrix.manylinux }}
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux }}
          CIBW_SKIP: pp38-*
          CIBW_TEST_SKIP: cp38-macosx_arm64
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.macosx_deployment_target }}

      - uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}-${{ matrix.cibw_arch }}${{ matrix.manylinux && format('-{0}', matrix.manylinux) }}
          path: ./wheelhouse/*.whl
